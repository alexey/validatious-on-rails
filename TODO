== TODO

=== validatious-on-rails

* Make Rails core validations basic options fully supported
  * validates_acceptance_of - :accept, :allow_nil
  * confirmation_of - Should use Rails I18n message, not Validatious message.
  * :allow_blank - for all validations (implemented for format/inclusion/exclusion already)
  * :on => :<action> (i.e. if current form action is ACTION)
  * :if/:unless => true|false (doubt this is even possible for all cases though - like Ruby procs)
* Tighten up the tests, not full coverage since the latest experiments.
* Adapter-interface (API) for custom client-side Validatious-validators
* Additional helpers: Support 3rd party form helpers
* Initializer (generate with the generator)
* Server-side (custom) Validatious-validator support (v2.Validator)
  * validates_uniqueness_of (RemoteValidator)
  * validates_association (?)
* Make Validatious::Validator#class_with_params(*params) generate the full HTML class name call for specified parameters (i.e. *params). Example: Validatious::LenghtMinumumValidator(validator).class_with_params(2) => "lenght-minimum_2"

=== validatious

* Make the submit button be disabled (non-clickable) while the form contains invalid values (maybe)